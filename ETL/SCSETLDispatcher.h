/*
*=====================================================================================
Description:  本文件是SCSDB-ETL的调度层(Dispatcher)的接口定义文件。
Version:	1.0
Created:	2014-03-07
Compiler:	g++
Author:		熊志强
Company:	深圳市汉云科技有限公司
* =====================================================================================
*/

#ifndef __SCS_ETL_DISPATCHER_H
#define __SCS_ETL_DISPATCHER_H

//#include "SCSETLComSt.h"

class CSCSETLDispatcher
{
public:
	CSCSETLDispatcher();
	virtual ~CSCSETLDispatcher();

	//获取错误码
	int GetErrno();
	//获取具体错误信息
	string GetError();

	/************************************************************************************
	功能：	注册打印日志信息的回调函数
	参数：	pPrintLog - 打印日志信息的函数地址
	返回值：无
	************************************************************************************/
	void RegisterPrintLog(PRINT_LOG pPrintLog);

	/*
	以下几个接口函数是用来对源数据库进行一些特定操作的
	（这些特定操作是为了方便UI层获取一些源数据库的有用信息的）
	如查看源数据库服务器中的所有数据库、查看某个数据库中的所有数据表
	*/

	//{begin
	/************************************************************************************
	功能：	连接源数据库
	参数：	eType - 数据库类型
			stPa - 数据库连接参数
	返回值：ERROR_NO_ERROR/错误码，错误具体信息通过GetErrno和GetError获取
	************************************************************************************/
	int Connect(EMDBType eType, STConPa stPa);

	/************************************************************************************
	功能：	查询源数据库服务器上存在的所有数据库
	参数：	vecDB - 查询到的源数据库服务器上的所有数据库
	返回值：ERROR_NO_ERROR/错误码，错误具体信息通过GetErrno和GetError获取
	************************************************************************************/
	int GetDB(vector<string> &vecDB);

	/************************************************************************************
	功能：	查询指定数据库中的所有数据表
	参数：	strDB - 需要查询的数据库
			vecTbls - 查询到的所有数据表
	返回值：ERROR_NO_ERROR/错误码，错误具体信息通过GetErrno和GetError获取
	************************************************************************************/
	int GetTables(string strDB, vector<string> &vecTbls);

    /****************************************************************************************
    功能   : 获得建表语句
    参数   ：strTblName 建表语句的表名, strTblStmt 建表语句
    返回值 ：ERROR_NO_ERROR/其余表示错误，根据GetErrno和GetError获取
    ***************************************************************************************/
    //int GetTableStatement(const std::string& strTblName, const std::string& pstrTblStmt);

	/****************************************************************************************
	功能   : 表结构导入到SCSDB
	参数   ：strTblName 建表语句的表名
	返回值 ：ERROR_NO_ERROR/其余表示错误，根据GetErrno和GetError获取
	***************************************************************************************/
	//int StartExpStructToSCS(const std::string &strTblName);

    /****************************************************************************************
	功能   : 表结构导入到SCSDB
    参数   ：vecTblName 一组表名
    返回值 ：ERROR_NO_ERROR/其余表示错误，根据GetErrno和GetError获取
    ***************************************************************************************/
	int StartExpStructToSCS(std::vector<std::string> &vecTblName);

    /****************************************************************************************
    功能   : 表结构导入到文件
    参数   ：strTblName 建表语句的表名, strFileName 文件名
    返回值 ：ERROR_NO_ERROR/其余表示错误，根据GetErrno和GetError获取
    ***************************************************************************************/
	//int StartExpStructToFile(std::string &strTblName, std::string &strFileName);

    /****************************************************************************************
    功能   : 表结构导入到文件
    参数   ：vecTblName 一组表名， strFileName 文件名
    返回值 ：ERROR_NO_ERROR/其余表示错误，根据GetErrno和GetError获取
    ***************************************************************************************/
	int StartExpStructToFile(std::vector<std::string> &vecTblName, std::string strFileName);

    /****************************************************************************************
    功能   : 启动导出数据到文件
    参数   ：stExpSqlFile 导出语句的信息
    返回值 ：ERROR_NO_ERROR/其余表示错误，根据GetErrno和GetError获取
    ***************************************************************************************/
    int StartExpDataToFile(STExpSqlFile &stExpSqlFile);

	/****************************************************************************************
	功能   : 启动导出数据到文件
	参数   ：stExpTblFile 导出表的参数信息
	返回值 ：ERROR_NO_ERROR/其余表示错误，根据GetErrno和GetError获取
	***************************************************************************************/
	int StartExpDataToFile(STExpTblFile &stExpTblFile);

    /****************************************************************************************
    功能   : 启动导出数据到SCS数据库
    参数   ：stExpSqlScs 导出查询语句到SCS的参数
    返回值 ：ERROR_NO_ERROR/其余表示错误，根据GetErrno和GetError获取
    ***************************************************************************************/
    int StartExpDataToSCS(STExpSqlScs &stExpSqlScs);

	/****************************************************************************************
	功能   : 启动导出数据到SCS数据库
	参数   ：stExpTblScs 导出表到SCS的参数
	返回值 ：ERROR_NO_ERROR/其余表示错误，根据GetErrno和GetError获取
	***************************************************************************************/
	int StartExpDataToSCS(STExpTblScs &stExpTblScs);

    /****************************************************************************************
    功能   : 启动导出文件数据到SCS数据库
    参数   ：stExpFileSCS 导出文件到SCS的参数
    返回值 ：ERROR_NO_ERROR/其余表示错误，根据GetErrno和GetError获取
    ***************************************************************************************/
    int StartFileToSCS(STExpFileScs& stExpFileSCS);
	
	/****************************************************************************************
	功能   : 启动导出文件数据到SCS数据库
	参数   ：id 根据指定的读线程ID号增加写线程
	返回值 ：ERROR_NO_ERROR/其余表示错误，根据GetErrno和GetError获取
	***************************************************************************************/
	int AddReadThread(TaskID &id);

	/****************************************************************************************
	功能   : 加快每个线程的抽取速度
	参数   ：无
	返回值 ：ERROR_NO_ERROR/其余表示错误，根据GetErrno和GetError获取
	***************************************************************************************/
	int AddPumpSpeed();

	/****************************************************************************************
	功能   : 减缓每个线程的抽取速度
	参数   ：无
	返回值 ：ERROR_NO_ERROR/其余表示错误，根据GetErrno和GetError获取
	***************************************************************************************/
	int SubPumpSpeed();

	/************************************************************************************
	功能：	关闭数据库连接
	参数：	无
	返回值：ERROR_NO_ERROR/错误码，错误具体信息通过GetErrno和GetError获取
	注：当不再需要操作源数据库时，需要显示关闭数据库连接。
		后面的表（结构、数据）抽取会自动重新连接源数据库
	************************************************************************************/
	int Close();
	//}end

	/************************************************************************************
	功能：	终止当前正在进行的ExpImp任务。
	参数：	无
	返回值：ERROR_NO_ERROR/错误码，错误具体信息通过GetErrno和GetError获取
	************************************************************************************/
	int CancelExpImp();

	/************************************************************************************
	功能：	获取当前的ExpImp任务的状态。
	参数：	无
	返回值：ERROR_NO_ERROR/错误码，错误具体信息通过GetErrno和GetError获取
	************************************************************************************/
	int GetExpImpStatus(STExpImpStatus &stStatus);

	/************************************************************************************
	功能：	获取当前导出的总行数
	参数：	无
	返回值：当前导出的总行数(>=0)/错误码(<0)，错误具体信息通过GetErrno和GetError获取
	************************************************************************************/
	scslong64 GetExportNum();

	/************************************************************************************
	功能：	获取当前导入的总行数
	参数：	无
	返回值：当前导入的总行数(>=0)/错误码(<0)，错误具体信息通过GetErrno和GetError获取
	************************************************************************************/
	scslong64 GetImportNum();

private:
	void SetErr(int nErr, string strErr);

	/************************************************************************************
	功能：	启动动态调节线程
	参数：	arg 线程所需参数
	返回值：无
	************************************************************************************/
	static void* StartDynAdjust(void *arg);
private:
	EMTaskState m_eState;					//全局的数据转换的状态
	int m_nSleepTime;						//控制睡眠时间来减缓导出数据的速度
	SCSDBImporterManager m_DBImpManager;	//数据导入管理
	SCSSrcDTManager	m_DTManager;			//数据导出管理
	SCSSQLFileManager m_FileManager;		//文件操作管理（写文件，读文件）
};
#endif

